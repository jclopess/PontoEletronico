version: '3.8'

services:
  # Serviço do Banco de Dados PostgreSQL
  db:
    image: postgres:15
    container_name: registroponto_db
    environment:
      POSTGRES_USER: postgres # Use o mesmo do seu application.properties
      POSTGRES_PASSWORD: H^062050010201ow # Use a mesma do seu application.properties
      POSTGRES_DB: registroponto_db
    ports:
      - "5433:5432" # Mapeia a porta interna 5432 para a 5433 na sua máquina
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # Serviço do Back-end Spring Boot
  backend:
    container_name: registroponto-backend
    # Constrói a imagem a partir do Dockerfile na pasta atual
    build: .
    restart: on-failure
    ports:
      - "8081:8081" # Mapeia a porta 8081 do container para a 8081 da sua máquina
    environment:
      # Sobrescreve as configurações do application.properties para apontar para o container do DB
      - spring.datasource.url=jdbc:postgresql://db:5432/registroponto_db
      - spring.datasource.username=postgres
      - spring.datasource.password=H^062050010201ow
      - logging.level.org.springframework.security=DEBUG
      - server.forward-headers-strategy=NATIVE
    depends_on:
      - db # Garante que o container do DB inicie antes do back-end

  # Serviço do Front-end com Nginx
  frontend:
    image: nginx:alpine
    container_name: registroponto-frontend
    ports:
      - "8080:80" # Mapeia a porta 80 do container para a porta 8080 da sua máquina
    volumes:
      # Mapeia a pasta 'frontend' local para a pasta web do Nginx
      - ./frontend:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

volumes:
  postgres-data:

  